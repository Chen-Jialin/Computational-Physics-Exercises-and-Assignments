%!PS-Adobe-2.0 EPSF-2.0
%%Title: 1-3-1.tex
%%Creator: gnuplot 5.2 patchlevel 6
%%CreationDate: Sat Mar 14 23:06:14 2020
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (1-3-1.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 6)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar 14 23:06:14 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 768 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
1176 1216 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 1216 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
1176 1664 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 1664 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
1176 2112 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 2112 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
1176 2560 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 2560 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
1176 3007 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 3007 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
1176 3455 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 3455 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
1176 3903 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 3903 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
1176 4351 M
3080 0 V
2367 0 R
144 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 4351 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
1176 4799 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 4799 M
63 0 V
5528 0 R
-63 0 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
0 4031 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1176 768 M
0 63 V
0 3968 R
0 -63 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
2294 768 M
0 4031 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
2294 768 M
0 63 V
0 3968 R
0 -63 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
3412 768 M
0 4031 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
3412 768 M
0 63 V
0 3968 R
0 -63 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
4531 768 M
0 3488 V
0 480 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
4531 768 M
0 63 V
0 3968 R
0 -63 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
5649 768 M
0 3488 V
0 480 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5649 768 M
0 63 V
0 3968 R
0 -63 V
stroke
LTb
0.500 UL
LTa
LCa setrgbcolor
6767 768 M
0 4031 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
6767 768 M
0 63 V
0 3968 R
0 -63 V
stroke
LTb
1.000 UL
LTb
1176 4799 N
0 -4031 V
5591 0 V
0 4031 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
4256 4256 N
0 480 V
2367 0 V
0 -480 V
-2367 0 V
Z stroke
% Begin plot #1
1.000 UP
2.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
1.000 UP
2.000 UL
LTb
LCb setrgbcolor
1176 1216 Pls
1204 1266 Pls
1232 1315 Pls
1260 1365 Pls
1288 1415 Pls
1316 1464 Pls
1344 1514 Pls
1372 1563 Pls
1400 1613 Pls
1428 1662 Pls
1456 1711 Pls
1484 1760 Pls
1511 1809 Pls
1539 1858 Pls
1567 1907 Pls
1595 1955 Pls
1623 2004 Pls
1651 2052 Pls
1679 2099 Pls
1707 2147 Pls
1735 2195 Pls
1763 2242 Pls
1791 2289 Pls
1819 2335 Pls
1847 2382 Pls
1875 2428 Pls
1903 2474 Pls
1931 2519 Pls
1959 2564 Pls
1987 2609 Pls
2015 2654 Pls
2043 2698 Pls
2071 2742 Pls
2099 2785 Pls
2126 2828 Pls
2154 2871 Pls
2182 2913 Pls
2210 2955 Pls
2238 2996 Pls
2266 3037 Pls
2294 3077 Pls
2322 3117 Pls
2350 3157 Pls
2378 3196 Pls
2406 3235 Pls
2434 3273 Pls
2462 3310 Pls
2490 3347 Pls
2518 3384 Pls
2546 3420 Pls
2574 3455 Pls
2602 3490 Pls
2630 3525 Pls
2658 3558 Pls
2686 3592 Pls
2714 3624 Pls
2741 3656 Pls
2769 3688 Pls
2797 3718 Pls
2825 3749 Pls
2853 3778 Pls
2881 3807 Pls
2909 3835 Pls
2937 3863 Pls
2965 3890 Pls
2993 3916 Pls
3021 3942 Pls
3049 3967 Pls
3077 3991 Pls
3105 4015 Pls
3133 4038 Pls
3161 4060 Pls
3189 4082 Pls
3217 4102 Pls
3245 4122 Pls
3273 4142 Pls
3301 4161 Pls
3329 4178 Pls
3356 4196 Pls
3384 4212 Pls
3412 4228 Pls
3440 4243 Pls
3468 4257 Pls
3496 4271 Pls
3524 4283 Pls
3552 4295 Pls
3580 4307 Pls
3608 4317 Pls
3636 4327 Pls
3664 4336 Pls
3692 4344 Pls
3720 4351 Pls
3748 4358 Pls
3776 4364 Pls
3804 4369 Pls
3832 4373 Pls
3860 4377 Pls
3888 4379 Pls
3916 4381 Pls
3944 4383 Pls
3972 4383 Pls
3999 4383 Pls
4027 4381 Pls
4055 4379 Pls
4083 4377 Pls
4111 4373 Pls
4139 4369 Pls
4167 4364 Pls
4195 4358 Pls
4223 4351 Pls
4251 4344 Pls
4279 4336 Pls
4307 4327 Pls
4335 4317 Pls
4363 4307 Pls
4391 4295 Pls
4419 4283 Pls
4447 4271 Pls
4475 4257 Pls
4503 4243 Pls
4531 4228 Pls
4559 4212 Pls
4587 4196 Pls
4614 4178 Pls
4642 4161 Pls
4670 4142 Pls
4698 4122 Pls
4726 4102 Pls
4754 4082 Pls
4782 4060 Pls
4810 4038 Pls
4838 4015 Pls
4866 3991 Pls
4894 3967 Pls
4922 3942 Pls
4950 3916 Pls
4978 3890 Pls
5006 3863 Pls
5034 3835 Pls
5062 3807 Pls
5090 3778 Pls
5118 3749 Pls
5146 3718 Pls
5174 3688 Pls
5202 3656 Pls
5229 3624 Pls
5257 3592 Pls
5285 3558 Pls
5313 3525 Pls
5341 3490 Pls
5369 3455 Pls
5397 3420 Pls
5425 3384 Pls
5453 3347 Pls
5481 3310 Pls
5509 3273 Pls
5537 3235 Pls
5565 3196 Pls
5593 3157 Pls
5621 3117 Pls
5649 3077 Pls
5677 3037 Pls
5705 2996 Pls
5733 2955 Pls
5761 2913 Pls
5789 2871 Pls
5817 2828 Pls
5844 2785 Pls
5872 2742 Pls
5900 2698 Pls
5928 2654 Pls
5956 2609 Pls
5984 2564 Pls
6012 2519 Pls
6040 2474 Pls
6068 2428 Pls
6096 2382 Pls
6124 2335 Pls
6152 2289 Pls
6180 2242 Pls
6208 2195 Pls
6236 2147 Pls
6264 2099 Pls
6292 2052 Pls
6320 2004 Pls
6348 1955 Pls
6376 1907 Pls
6404 1858 Pls
6432 1809 Pls
6459 1760 Pls
6487 1711 Pls
6515 1662 Pls
6543 1613 Pls
6571 1563 Pls
6599 1514 Pls
6627 1464 Pls
6655 1415 Pls
6683 1365 Pls
6711 1315 Pls
6739 1266 Pls
6767 1216 Pls
6159 4616 Pls
LTw
% End plot #1
% Begin plot #2
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
LCb setrgbcolor
LCb setrgbcolor
2.000 UL
LTb
LCb setrgbcolor
5840 4376 M
639 0 V
1176 1216 M
28 50 V
28 49 V
28 50 V
28 50 V
28 49 V
28 50 V
28 49 V
28 50 V
28 49 V
28 49 V
28 49 V
27 49 V
28 49 V
28 49 V
28 48 V
28 49 V
28 48 V
28 47 V
28 48 V
28 48 V
28 47 V
28 47 V
28 46 V
28 47 V
28 46 V
28 46 V
28 45 V
28 45 V
28 45 V
28 45 V
28 44 V
28 44 V
28 43 V
27 43 V
28 43 V
28 42 V
28 42 V
28 41 V
28 41 V
28 40 V
28 40 V
28 40 V
28 39 V
28 39 V
28 38 V
28 37 V
28 37 V
28 37 V
28 36 V
28 35 V
28 35 V
28 35 V
28 33 V
28 34 V
28 32 V
27 32 V
28 32 V
28 30 V
28 31 V
28 29 V
28 29 V
28 28 V
28 28 V
28 27 V
28 26 V
28 26 V
28 25 V
28 24 V
28 24 V
28 23 V
28 22 V
28 22 V
28 20 V
28 20 V
28 20 V
28 19 V
28 17 V
27 18 V
28 16 V
28 16 V
28 15 V
28 14 V
28 14 V
28 12 V
28 12 V
28 12 V
28 10 V
28 10 V
28 9 V
28 8 V
28 7 V
28 7 V
28 6 V
28 5 V
28 4 V
28 4 V
28 2 V
28 2 V
28 2 V
28 0 V
27 0 V
28 -2 V
28 -2 V
28 -2 V
28 -4 V
28 -4 V
28 -5 V
28 -6 V
28 -7 V
28 -7 V
28 -8 V
28 -9 V
28 -10 V
28 -10 V
28 -12 V
28 -12 V
28 -12 V
28 -14 V
28 -14 V
28 -15 V
28 -16 V
28 -16 V
27 -18 V
28 -17 V
28 -19 V
28 -20 V
28 -20 V
28 -20 V
28 -22 V
28 -22 V
28 -23 V
28 -24 V
28 -24 V
28 -25 V
28 -26 V
28 -26 V
28 -27 V
28 -28 V
28 -28 V
28 -29 V
28 -29 V
28 -31 V
28 -30 V
28 -32 V
27 -32 V
28 -32 V
28 -34 V
28 -33 V
28 -35 V
28 -35 V
28 -35 V
28 -36 V
28 -37 V
28 -37 V
28 -37 V
28 -38 V
28 -39 V
28 -39 V
28 -40 V
28 -40 V
28 -40 V
28 -41 V
28 -41 V
28 -42 V
28 -42 V
28 -43 V
27 -43 V
28 -43 V
28 -44 V
28 -44 V
28 -45 V
28 -45 V
28 -45 V
28 -45 V
28 -46 V
28 -46 V
28 -47 V
28 -46 V
28 -47 V
28 -47 V
28 -48 V
28 -48 V
28 -47 V
28 -48 V
28 -49 V
28 -48 V
28 -49 V
28 -49 V
27 -49 V
28 -49 V
28 -49 V
28 -49 V
28 -50 V
28 -49 V
28 -50 V
28 -49 V
28 -50 V
28 -50 V
28 -49 V
28 -50 V
stroke
LTw
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UL
LTb
1176 4799 N
0 -4031 V
5591 0 V
0 4031 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
